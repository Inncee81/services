// Tests the 'Socket IO' API loader
'use strict';

const fs = require('fs'),
    path = require('path');

exports.sockets = [
    {
        event: 'process-something',
        onEvent({socket, message}, callback) {
            callback(null, 'data');
        },
        middleware: [
            ({socket, socketHandler, message}, next) => {
                next();
            }
        ]
    },
    {
        event: 'send-email',
        onEvent({socket, message}, callback) {
            callback(null, 'Received!');
        },
        middleware: [
            ({socket, socketHandler, message}, next) => {
                if (!message) {
                    next({message: 'No email provided!'});
                } else if (~message.address.indexOf('spam')) {
                    next({message: 'Blocked!'});
                } else {
                    next();
                }
            }
        ]
    },
    {
        event: 'download-file',
        type: 'stream',
        onEvent({stream, message}, callback) {
            let fileName = message.fileName,
                readStream = fs.createReadStream(path.join(__dirname, fileName));
            
            readStream.pipe(stream);

            if (callback) {
                callback('Started download');
            }
        }
    },
    {
        event: 'download-multi-stream',
        type: 'stream',
        onEvent({stream, message}, callback) {
            let fileName = message.fileName,
                stream2 = message.stream2,
                readStream = fs.createReadStream(path.join(__dirname, fileName));

            readStream.pipe(stream);
            readStream.pipe(stream2);

            if (callback) {
                callback('Started download');
            }
        }
    },
    {
        event: 'connected',
        onEvent: ({socket}) => {
            socket.emit('custom-package-event', 'Hello from socket-api-package1!');
        }
    }
]
